package storage;

public class Memory {
    private static int[][][] puzzle;

    public static void addPuzzles() {
        puzzle = new int[24][][];
//        easy
        puzzle[0] = new int[][] {
                {-1, -1, 3, 3, -1, -1, 3},
                {2, -1, 0, 2, -1, -1, 3},
                {2, 3, 2, -1, -1, -1, 2},
                {2, -1, 1, 3, 2, 2, 2},
                {3, -1, -1, 3, -1, 2, -1},
                {-1, -1, -1, -1, 1, -1, -1},
                {1, -1, -1, -1, 3, 3, -1}
        };
        puzzle[1] = new int[][] {
                {-1, 2, 2, 3,-1, 3, 3},
                {-1,-1,-1, 2, 2, 1,-1},
                { 2,-1, 3,-1,-1, 2, 3},
                { 3, 2, 3,-1,-1,-1, 2},
                { 3,-1, 2, 2, 3,-1,-1},
                { 2, 3, 1,-1, 1,-1,-1},
                { 3,-1,-1,-1, 3,-1, 1}
        };
        puzzle[2] = new int[][] {
                { 1,-1,-1, 3, 3,-1, 1},
                {-1,-1, 0, 2,-1,-1,-1},
                { 3, 3,-1,-1, 2, 2,-1},
                { 2, 2,-1,-1,-1,-1,-1},
                { 3, 2,-1, 2, 1, 3,-1},
                { 2,-1,-1,-1, 2,-1,-1},
                {-1,-1,-1,-1, 3, 3, 3}
        };
        puzzle[3] = new int[][] {
                {-1,-1,-1, 2, 2, 2, 3},
                { 1, 2,-1,-1,-1, 2, 3},
                {-1, 3, 1,-1, 2,-1,-1},
                { 2,-1, 3,-1,-1,-1,-1},
                { 3,-1, 3, 1,-1, 2, 3},
                {-1,-1,-1,-1,-1, 0,-1},
                {-1, 3, 3, 3,-1, 3,-1}
        };
        puzzle[4] = new int[][] {
                {-1,-1,-1,-1, 3, 3,-1},
                { 2, 0, 2, 0,-1, 1, 2},
                {-1, 2,-1,-1, 3,-1, 3},
                {-1,-1, 2, 2, 0, 2,-1},
                { 1,-1,-1,-1, 2,-1,-1},
                { 3, 3,-1,-1, 3,-1, 2},
                { 1,-1,-1, 1,-1, 2, 2}
        };
        puzzle[5] = new int[][] {
                { 1, 3,-1, 3, 3,-1, 3},
                {-1, 3,-1,-1,-1,-1,-1},
                {-1, 1,-1,-1,-1,-1,-1},
                {-1,-1,-1, 2,-1, 3, 2},
                {-1, 3, 2, 3,-1, 3,-1},
                {-1,-1,-1, 0,-1,-1,-1},
                { 1, 2,-1,-1, 3, 3,-1}
        };
        puzzle[6] = new int[][] {
                { 2, 2, 2, 3, 3, 1,-1},
                {-1,-1, 0, 2,-1, 3,-1},
                {-1,-1,-1,-1,-1,-1,-1},
                { 3, 3,-1,-1, 3, 3,-1},
                {-1,-1, 2,-1, 2,-1,-1},
                { 3,-1, 2,-1, 2, 2,-1},
                { 3,-1, 2,-1,-1, 2,-1}
        };
        puzzle[7] = new int[][] {
                { 1,-1, 3, 3, 2, 2, 2},
                { 2,-1, 1,-1, 2,-1, 3},
                { 3,-1, 3,-1,-1, 1, 2},
                { 2,-1, 3, 0,-1, 2, 3},
                {-1,-1,-1,-1,-1, 2, 2},
                { 2,-1,-1, 0,-1,-1, 2},
                {-1,-1, 3, 3,-1,-1, 2}
        };
//        intermediate
        puzzle[8] = new int[][] {
                { 1,-1, 3,-1,-1, 3, 3},
                {-1, 3,-1,-1,-1,-1, 1},
                { 1,-1, 0, 2, 1,-1,-1},
                {-1,-1,-1, 3, 3,-1, 3},
                { 3, 2,-1,-1,-1, 1,-1},
                {-1, 2, 1,-1,-1, 1, 3},
                { 1,-1,-1,-1, 3,-1,-1}
        };
        puzzle[9] = new int[][] {
                {-1,-1, 2,-1,-1, 3,-1},
                { 3,-1,-1, 3,-1,-1,-1},
                {-1,-1,-1, 1,-1, 2,-1},
                {-1, 1, 3, 3, 2, 1,-1},
                {-1, 0,-1, 2,-1,-1, 3},
                {-1,-1,-1, 1,-1,-1, 2},
                { 1,-1,-1, 2,-1,-1,-1}
        };
        puzzle[10] = new int[][] {
                { 3, 1,-1, 2, 3,-1,-1},
                {-1, 1,-1,-1, 3, 2, 3},
                {-1, 1, 3, 2,-1,-1, 3},
                {-1,-1,-1,-1, 2,-1,-1},
                { 3, 2,-1,-1,-1, 2,-1},
                {-1, 0,-1,-1,-1,-1,-1},
                {-1, 3, 3,-1, 3, 2,-1}
        };
        puzzle[11] = new int[][] {
                {-1, 3, 3,-1, 2, 3,-1},
                {-1, 1,-1,-1,-1,-1, 3},
                {-1, 2,-1,-1, 3,-1,-1},
                { 3,-1,-1,-1, 2, 0, 3},
                { 1,-1, 1,-1,-1,-1, 3},
                { 2,-1,-1, 2,-1,-1, 2},
                { 3,-1, 3,-1, 3, 1,-1}
        };
        puzzle[12] = new int[][] {
                {-1, 3,-1, 3, 3, 2, 2},
                { 2,-1,-1,-1,-1,-1,-1},
                { 2, 2, 2, 3,-1, 3,-1},
                {-1,-1,-1, 3, 0, 2,-1},
                { 2, 2, 2,-1,-1, 3,-1},
                {-1, 1,-1,-1, 0,-1, 3},
                {-1, 3, 3,-1,-1,-1, 1}
        };
        puzzle[13] = new int[][] {
                {-1,-1, 2, 2, 3, 3,-1},
                { 3, 3,-1,-1,-1, 0,-1},
                { 2,-1,-1,-1,-1,-1, 3},
                {-1,-1,-1,-1, 3,-1,-1},
                {-1,-1, 3,-1, 2, 2,-1},
                { 1, 0,-1, 2,-1, 1, 2},
                {-1,-1, 3, 3, 2,-1,-1}
        };
        puzzle[14] = new int[][] {
                {-1, 2, 3, 3, 3, 2, 2},
                {-1, 0,-1,-1,-1, 1, 2},
                {-1,-1, 3,-1, 2,-1,-1},
                { 3, 0,-1,-1,-1,-1, 3},
                {-1,-1,-1, 2, 2,-1, 3},
                { 3,-1, 2, 2,-1,-1, 3},
                {-1, 3,-1,-1,-1,-1, 2}
        };
        puzzle[15] = new int[][] {
                { 1,-1, 3, 3,-1, 3,-1},
                {-1, 2, 0,-1,-1,-1, 2},
                {-1,-1,-1,-1,-1,-1, 2},
                { 3, 3, 2,-1, 3,-1,-1},
                {-1,-1,-1, 1, 1,-1,-1},
                { 3,-1, 3,-1, 3,-1, 3},
                { 1,-1,-1, 1,-1,-1,-1}
        };
//        Tough
        puzzle[16] = new int[][] {
                { 2, 2, 3, 3,-1,-1, 2},
                {-1,-1, 2,-1,-1, 3,-1},
                {-1,-1, 1,-1,-1, 3,-1},
                {-1,-1,-1,-1, 1,-1,-1},
                {-1, 2,-1,-1,-1,-1,-1},
                { 2, 0,-1,-1, 2,-1, 2},
                { 2, 2, 3,-1, 3,-1, 1}
        };
        puzzle[17] = new int[][] {
                { 1,-1, 3, 2, 2,-1, 3},
                {-1, 1,-1,-1, 2,-1,-1},
                { 3, 1, 2,-1,-1, 2,-1},
                { 3,-1,-1, 3, 3,-1, 3},
                {-1, 1,-1,-1,-1, 1,-1},
                {-1,-1,-1,-1,-1, 2,-1},
                { 2, 3, 3,-1,-1, 3, 1}
        };
        puzzle[18] = new int[][] {
                {-1,-1,-1,-1,-1, 2, 3},
                {-1, 3,-1, 2, 3,-1,-1},
                { 2,-1,-1,-1,-1, 1, 2},
                {-1,-1,-1, 2,-1, 2,-1},
                { 2, 1,-1, 1, 2, 1,-1},
                {-1, 3,-1, 3,-1, 3,-1},
                { 3,-1, 3,-1,-1,-1,-1}
        };
        puzzle[19] = new int[][] {
                { 1, 2, 3,-1, 3,-1,-1},
                {-1, 2,-1, 3,-1,-1, 3},
                {-1,-1,-1,-1,-1, 3,-1},
                {-1,-1,-1, 3,-1,-1, 1},
                { 3, 2,-1, 1,-1, 3,-1},
                { 2,-1, 2, 2,-1,-1,-1},
                {-1,-1,-1, 3, 3,-1, 1}
        };
//        unsolved - loop
        puzzle[20] = new int[][] {
                {-1, 3,-1, 3,-1, 2,-1},
                { 2, 2, 3,-1, 3,-1, 3},
                {-1,-1, 2,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1},
                { 3, 1,-1, 3,-1,-1,-1},
                {-1,-1, 3,-1, 3, 1, 2},
                {-1, 2,-1,-1,-1, 2,-1}
        };
        puzzle[21] = new int[][] {
                { 2,-1,-1, 3,-1, 3,-1},
                { 1,-1,-1,-1, 2, 3,-1},
                {-1,-1,-1, 2, 2,-1, 3},
                { 2,-1, 2, 2,-1,-1, 3},
                {-1, 1,-1,-1,-1, 1,-1},
                {-1, 1,-1, 1,-1,-1,-1},
                {-1, 2,-1,-1, 3, 3, 1}
        };
        puzzle[22] = new int[][] {
                { 2, 2,-1,-1,-1, 1, 2},
                {-1, 3,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1, 2},
                { 3, 3,-1, 3, 3,-1,-1},
                {-1,-1,-1,-1, 2,-1, 2},
                { 3,-1, 0,-1,-1,-1, 3},
                {-1,-1, 3,-1,-1, 2, 1}
        };
        puzzle[23] = new int[][] {
                { 1, 2, 3,-1, 2,-1,-1},
                { 3,-1,-1,-1, 2, 3, 2},
                { 2,-1, 1,-1, 0,-1,-1},
                {-1, 1, 2, 3,-1, 3,-1},
                {-1,-1,-1,-1, 3,-1,-1},
                { 1,-1, 2,-1,-1,-1,-1},
                { 3,-1,-1,-1,-1, 1, 1}
        };
    }

    public static int[][] getPuzzle(int puzzleNum) {
        return puzzle[puzzleNum];
    }

    public static int getNumOfPuzzles() {
        return puzzle.length;
    }
}
